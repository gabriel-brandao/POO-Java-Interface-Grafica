/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import javax.swing.JOptionPane;
import controle.ControladorCadastroCliente;
import entidade.Cliente;
import entidade.Visão;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author gabriel
 */
public class JanelaCadastroCliente extends javax.swing.JFrame {

    ControladorCadastroCliente controlador;
    Vector<Visão<String>> clientes_cadastrados;
    /**
     * Creates new form JanelaCadastroCliente
     */
    public JanelaCadastroCliente(ControladorCadastroCliente controlador) {
        this.controlador = controlador;
        clientes_cadastrados = Cliente.getVisões();
        initComponents();
    }

  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cpfTextField = new javax.swing.JTextField();
        cpfLabel = new javax.swing.JLabel();
        clientes_cadastradosComboBox = new javax.swing.JComboBox();
        clientes_cadastradosLabel = new javax.swing.JLabel();
        nomeLabel = new javax.swing.JLabel();
        endereçoLabel = new javax.swing.JLabel();
        telefoneLabel = new javax.swing.JLabel();
        nomeTextField = new javax.swing.JTextField();
        endereçoTextField = new javax.swing.JTextField();
        telefoneTextField = new javax.swing.JTextField();
        comandosPanel = new java.awt.Panel();
        inserirButton = new javax.swing.JButton();
        consultarButton = new javax.swing.JButton();
        alterarButton = new javax.swing.JButton();
        removerButton = new javax.swing.JButton();
        limparButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastrar Clientes");

        cpfLabel.setText("CPF");

        clientes_cadastradosComboBox.setModel(new DefaultComboBoxModel(clientes_cadastrados));

        clientes_cadastradosLabel.setText("Clientes Cadastrados");

        nomeLabel.setText("Nome");

        endereçoLabel.setText("Endereço");

        telefoneLabel.setText("Telefone");

        inserirButton.setText("Inserir");
        inserirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inserirCliente(evt);
            }
        });

        consultarButton.setText("Consultar");
        consultarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarCliente(evt);
            }
        });

        alterarButton.setText("Alterar");
        alterarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarCliente(evt);
            }
        });

        removerButton.setText("Remover");
        removerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerCliente(evt);
            }
        });

        limparButton.setText("Limpar");
        limparButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparCamposTextos(evt);
            }
        });

        javax.swing.GroupLayout comandosPanelLayout = new javax.swing.GroupLayout(comandosPanel);
        comandosPanel.setLayout(comandosPanelLayout);
        comandosPanelLayout.setHorizontalGroup(
            comandosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(comandosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inserirButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(consultarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alterarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(limparButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        comandosPanelLayout.setVerticalGroup(
            comandosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(comandosPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(comandosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inserirButton)
                    .addComponent(consultarButton)
                    .addComponent(alterarButton)
                    .addComponent(removerButton)
                    .addComponent(limparButton))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(comandosPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(clientes_cadastradosLabel)
                        .addComponent(cpfLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(nomeLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(telefoneLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(endereçoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(endereçoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientes_cadastradosComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nomeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cpfTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telefoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(182, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clientes_cadastradosComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientes_cadastradosLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpfLabel)
                    .addComponent(cpfTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endereçoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endereçoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telefoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telefoneLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comandosPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inserirCliente(java.awt.event.ActionEvent evt) {                                
       Cliente cliente = obterClienteInformado();
       String mensagem_erro = null;
        
          if (cliente != null) 
             mensagem_erro = controlador.inserirCliente(cliente);
           else 
             mensagem_erro = "Algum atributo do cliente não foi informado";
              if (mensagem_erro == null) {
                 Visão<String> visão = cliente.getVisão();
                 clientes_cadastradosComboBox.addItem (visão);
                 clientes_cadastradosComboBox.setSelectedItem(visão);
              } 
               else 
                JOptionPane.showMessageDialog(this, mensagem_erro, "ERRO", JOptionPane.ERROR_MESSAGE);
    }

    private void consultarCliente(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarCliente
        Visão<String> visão = (Visão<String>) clientes_cadastradosComboBox.getSelectedItem ();
        Cliente cliente = null;
        String mensagem_erro = null;

        if (visão != null) {
            cliente = Cliente.buscarCliente (visão.getChave());
            if (cliente == null) 
                mensagem_erro = "Cliente não cadastrado";
        } 
         else
           mensagem_erro = "Nenhum cliente selecionado";
                if (mensagem_erro == null) {
                    cpfTextField.setText (cliente.getCpf());
                    nomeTextField.setText (cliente.getNome());
                    endereçoTextField.setText (cliente.getEndereço());
                    telefoneTextField.setText (cliente.getTelefone());
                } 
                 else 
                    JOptionPane.showMessageDialog(this, mensagem_erro, "ERRO", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_consultarCliente

    private void alterarCliente(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarCliente
        Cliente cliente = obterClienteInformado();
        String mensagem_erro = null;

        if (cliente != null)
           mensagem_erro = controlador.alterarCliente(cliente);
        else 
            mensagem_erro = "Algum atributo do cliente não foi informado";
          
          if (mensagem_erro == null) {
            Visão<String> visão = getVisãoClientesCadastrados(cliente.getCpf());

            if (visão != null) {
                visão.setInfo(cliente.getVisão().getInfo());
                clientes_cadastradosComboBox.updateUI();
                clientes_cadastradosComboBox.setSelectedItem(visão);
            }
        } 
         else 
            JOptionPane.showMessageDialog(this, mensagem_erro, "ERRO", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_alterarCliente

    private void removerCliente(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerCliente
        Visão<String> visão = (Visão<String>) clientes_cadastradosComboBox.getSelectedItem ();
        String mensagem_erro = null;
        
        if (visão != null) 
            mensagem_erro = controlador.removerCliente(visão.getChave());
        else 
            mensagem_erro = "Nenhum cliente selecionado";

        if (mensagem_erro == null) {
            clientes_cadastrados.remove(visão);
            if (clientes_cadastrados.size() >= 1)
                clientes_cadastradosComboBox.setSelectedIndex(0);
            else 
                clientes_cadastradosComboBox.setSelectedIndex(-1);
        } 
         else 
            JOptionPane.showMessageDialog(this, mensagem_erro, "ERRO",JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_removerCliente

    private void limparCamposTextos(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparCamposTextos
        cpfTextField.setText ("");
        nomeTextField.setText ("");
        endereçoTextField.setText ("");
        telefoneTextField.setText ("");
    }//GEN-LAST:event_limparCamposTextos

    private Cliente obterClienteInformado() {
        String cpf = cpfTextField.getText();
        if (cpf.isEmpty()) 
            return null;
        
        String nome = nomeTextField.getText();
        if (nome.isEmpty()) 
            return null;
        
        String endereço = endereçoTextField.getText();
        if (endereço.isEmpty()) 
            return null;
        
        String telefone = telefoneTextField.getText();
        if (telefone.isEmpty()) 
            return null;

        return new Cliente (cpf, nome, endereço, telefone);
}

    
    private Visão<String> getVisãoClientesCadastrados(String chave) {
        for (Visão<String> visão : clientes_cadastrados)
            if (visão.getChave().equals(chave)) 
                return visão;
                     
        return null;
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterarButton;
    private javax.swing.JComboBox clientes_cadastradosComboBox;
    private javax.swing.JLabel clientes_cadastradosLabel;
    private java.awt.Panel comandosPanel;
    private javax.swing.JButton consultarButton;
    private javax.swing.JLabel cpfLabel;
    private javax.swing.JTextField cpfTextField;
    private javax.swing.JLabel endereçoLabel;
    private javax.swing.JTextField endereçoTextField;
    private javax.swing.JButton inserirButton;
    private javax.swing.JButton limparButton;
    private javax.swing.JLabel nomeLabel;
    private javax.swing.JTextField nomeTextField;
    private javax.swing.JButton removerButton;
    private javax.swing.JLabel telefoneLabel;
    private javax.swing.JTextField telefoneTextField;
    // End of variables declaration//GEN-END:variables
}
